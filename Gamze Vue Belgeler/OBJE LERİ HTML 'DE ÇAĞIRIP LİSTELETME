HTML:

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

<div id="app">

<ul> <!-- ul ile başlayıp biten kod bloğu alt alta her obje elemanını yazdırır. -->
<li v-for="personel in persons" >
  <ul>
  <li v-for="(value,key,index) in personel"> <strong> {{ key }} </strong> : {{ value }} {{ index }}</li>
  </ul>
</li>
</ul>

<hr>
  <ul>

    <li v-for="(materials,index) in products"> {{ materials }} - {{ index }} </li>

    <!-- "materials" kısmının ismini biz verdik sadece string interpolationdaki isimle aynı olmalı iki tarafa da aynı isim yazılmalı. "materials in product" bizim array içerisindeki elemanları tek tek gezmemize olanak sağlıyor. indexler de alınabilir yani gezilen elemanın arrayin kaçıncı sırasında olduğu bilgisi de elde edilir. -->
  </ul>
  <hr>
  <div v-for="(materials,index) in products">
    <!-- listeleri ekrana basmak için farklı bir yol. -->
    <h3> {{ materials }} </h3>
    <p> {{ index }}</p>
  </div>

  <hr>

  <template v-for="(materials,index) in products">
    <!-- Template elemnti vue-js tarafından render edilmez. Html yapısını bozmaz yani. -->

    <h3> {{ materials }} </h3>
    <p> {{ index }}</p>

  </template>
  
  <span v-for="number in 6"> {{ number }}  </span> <!-- 7 ye kadar yani 6 dahil numaraları sıralamak için kullanıldı. v-for bu işe de yarar. -->


</div>


JS:

new Vue({
  el: '#app',
  data: {
    products: ["Monitör", "Klavye", "Askı", "Masa"],
    persons: [{
        name: "gamze",
        email: "gamze@htm.com"
      },
      {
        name: "gamz",
        email: "gamz@htm.com"
      },
      {
        name: "gam",
        email: "gam@htm.com"
      },

    ]


  }

});


